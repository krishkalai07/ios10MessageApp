//
//  MessagesViewController.m
//  MessagesExtension
//
//  Created by Krish Kalai on 3/7/17.
//  Copyright Â© 2017 Krish Kalai. All rights reserved.
//

#import "MessagesViewController.h"


@interface MessagesViewController ()

- (IBAction)didPressCreateMessageButton;
- (IBAction)valueChangedInStepper:(UIStepper *)sender;

@end

@implementation MessagesViewController {
    int stepper_value;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    stepper_value = 0;
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Conversation Handling

-(void)didBecomeActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the inactive to active state.
    // This will happen when the extension is about to present UI.
    
    // Use this method to configure the extension and restore previously stored state.
}

-(void)willResignActiveWithConversation:(MSConversation *)conversation {
    // Called when the extension is about to move from the active to inactive state.
    // This will happen when the user dissmises the extension, changes to a different
    // conversation or quits Messages.
    
    // Use this method to release shared resources, save user data, invalidate timers,
    // and store enough state information to restore your extension to its current state
    // in case it is terminated later.
}

-(void)didReceiveMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when a message arrives that was generated by another instance of this
    // extension on a remote device.
    
    // Use this method to trigger UI updates in response to the message.
    
    NSLog(@"Recieved a message");
}

-(void)didStartSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user taps the send button.
    NSLog(@"Sent a message");
}

-(void)didCancelSendingMessage:(MSMessage *)message conversation:(MSConversation *)conversation {
    // Called when the user deletes the message without sending it.
    
    // Use this to clean up state related to the deleted message.
}

-(void)willTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called before the extension transitions to a new presentation style.
    
    // Use this method to prepare for the change in presentation style.
}

-(void)didTransitionToPresentationStyle:(MSMessagesAppPresentationStyle)presentationStyle {
    // Called after the extension transitions to a new presentation style.
    
    // Use this method to finalize any behaviors associated with the change in presentation style.
}

- (IBAction)didPressCreateMessageButton {
    UIImage *image = [self createImageForMessage];
    MSConversation *conversation = [[MSConversation alloc] init];
    
    if (image != nil && conversation != nil) {
        MSMessageTemplateLayout *layout = [[MSMessageTemplateLayout alloc] init];
        layout.image = image;
        layout.caption = @"Stepper value";
        
        MSMessage *message = [[MSMessage alloc] init];
        message.layout = layout;
        message.URL = [NSURL URLWithString:@"emptyURL"];
        
        [conversation insertMessage:message completionHandler:nil];
    }
}

- (UIImage*) createImageForMessage {
    //UIView *background = [[UIView init] alloc]; //I failed this hard
    UIView *background = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 300, 300)];
    background.backgroundColor = [UIColor whiteColor];
    
    UILabel *label = [[UILabel alloc] initWithFrame:CGRectMake(75, 75, 150, 150)];
    label.font = [UIFont fontWithName:@"Arial" size:56];
    label.backgroundColor = [UIColor redColor];
    label.textColor = [UIColor whiteColor];
    label.text = [NSString stringWithFormat:@"%d", (int)(stepper_value)];
    label.textAlignment = NSTextAlignmentCenter;
    label.layer.cornerRadius = label.frame.size.width/2.0;
    label.clipsToBounds = YES;
    
    [background addSubview:label];
    [self.view addSubview:background];
    
    UIGraphicsBeginImageContextWithOptions(background.frame.size, NO, [UIScreen mainScreen].scale);
    [background drawViewHierarchyInRect:background.frame afterScreenUpdates:YES];
    UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    [background removeFromSuperview];
    
    return image;
}

- (IBAction)valueChangedInStepper:(UIStepper *)sender {
    stepper_value = [sender value];
}

@end
